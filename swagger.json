{
  "openapi": "3.0.1",
  "info": {
    "version": "1.2.0",
    "title": "Pets Support",
    "description": "Backend documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://api-petly.onrender.com/api" },
    { "url": "http://localhost:3333/api" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Services-Sidebar",
      "description": "Contact information about the service endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "User current",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "content": {}
          },
          "403": {
            "description": "Invalid token",
            "content": {}
          },
          "401": {
            "description": "Error token",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "User not found or not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/refresh": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User refresh",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "User not found or not authorized",
            "content": {}
          },
          "403": {
            "description": "Invalid token",
            "content": {}
          },
          "401": {
            "description": "Error token",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "User not found or not authorized",
            "content": {}
          },
          "403": {
            "description": "Invalid token",
            "content": {}
          },
          "401": {
            "description": "Error token",
            "content": {}
          }
        }
      }
    },
    "/friends": {
      "get": {
        "tags": ["Services-Sidebar"],
        "summary": "Get contacts about services",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to get services",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get news",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to get news",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/userspets": {
      "get": {
        "tags": ["User"],
        "summary": "Get user's pets",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPetsUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to get user's pets or it already exists",
            "content": {}
          }
        }
      }
    },
    "/userspets/add": {
      "post": {
        "tags": ["User"],
        "summary": "Add user's pets",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add user's pets",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserPetsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUserPetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to add user's pets or it already exists",
            "content": {}
          }
        }
      }
    },
    "/userspets/remove/": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete pet",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Id pet"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "There is no pet",
            "content": {}
          }
        }
      }
    },
    "/notice": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notices by categories",
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "description": "Category by notices",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page pagination",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit for pagination",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to get all notices",
            "content": {}
          }
        }
      }
    },
    "/notice/ad/": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get one notice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get one notice",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetONEResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to get one notice",
            "content": {}
          }
        }
      }
    },
    "/users/favorite/": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add notices to favorites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id user",
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Notices object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoriteNotivesAddRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteNotivesAddResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to add favorite notices",
            "content": {}
          },
          "401": {
            "description": "Error token",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete notices from favorites",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id user",
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFavoriteNotivesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to delete favorite notices",
            "content": {}
          },
          "401": {
            "description": "Error token",
            "content": {}
          }
        }
      }
    },
    "/notice/add": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add notices",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Notices object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoticeAddRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeAddResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to get all notices",
            "content": {}
          },
          "401": {
            "description": "Error token",
            "content": {}
          }
        }
      }
    },
    "/notice/my": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notices authorized user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticesAuthUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to get notices auth user",
            "content": {}
          },
          "401": {
            "description": "Error token",
            "content": {}
          }
        }
      }
    },
    "/notice/remove/": {
      "delete": {
        "tags": ["Notices"],
        "summary": "Remove notices",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notice Id",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error occured",
            "content": {}
          },
          "401": {
            "description": "Error token",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "userName", "city", "phone"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": "Ivan"
          },
          "city": {
            "type": "string",
            "description": "City of residence of the user",
            "example": "Kyiv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380123456789"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "user": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "_id": {
              "type": "integer",
              "description": "User's id"
            }
          }
        },
        "example": {
          "user": {
            "email": "ivan@gmail.com",
            "_id": "1"
          }
        }
      },
      "VerificationResponse": {
        "type": "object",
        "user": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "_id": {
              "type": "integer",
              "description": "User's id"
            },
            "userName": {
              "type": "string",
              "description": "User's name",
              "example": "Ivan"
            },
            "city": {
              "type": "string",
              "description": "City of residence of the user",
              "example": "Kyiv"
            },
            "phone": {
              "type": "string",
              "description": "User's phone",
              "example": "+380123456789"
            }
          }
        },
        "example": {
          "user": {
            "email": "ivan@gmail.com",
            "_id": "1",
            "userName": "Ivan",
            "city": "Kyiv",
            "phone": "+380123456789"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNjc0OTMxMTc4fQ.I9kaulBObpq4MOHq4raD3iTwanceICRkB5S9Zs2XOvM"
          },
          "longToken": {
            "type": "string",
            "description": "User's longToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNjc0OTMxMTc4fQ.I9kaulBObpq4MOHq4raD3iTwanceICRkB5S9Zs2XOvM"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "userName": {
                "type": "string",
                "description": "User's name",
                "example": "Ivan"
              }
            }
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNjc0OTk3OTMyfQ.M6JRm96MLgXda_EvORAd3KDOVOnXNSQkE1v-c-2jano",
          "longToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNjc0OTk3OTMyfQ.M6JRm96MLgXda_EvORAd3KDOVOnXNSQkE1v-c-2jano",
          "user": {
            "email": "ivan@gmail.com",
            "userName": "Ivan"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "user": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "_id": {
              "type": "integer",
              "description": "User's id"
            },
            "userName": {
              "type": "string",
              "description": "User's name",
              "example": "Ivan"
            },
            "city": {
              "type": "string",
              "description": "City of residence of the user",
              "example": "Kyiv"
            },
            "phone": {
              "type": "string",
              "description": "User's phone",
              "example": "+380123456789"
            }
          }
        },
        "example": {
          "user": {
            "email": "ivan@gmail.com",
            "_id": "1",
            "userName": "Ivan",
            "city": "Kyiv",
            "phone": "+380123456789"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": "Ivan"
          },
          "city": {
            "type": "string",
            "description": "City of residence of the user",
            "example": "Kyiv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380123456789"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "_id": {
              "type": "integer",
              "description": "User's id"
            },
            "userName": {
              "type": "string",
              "description": "User's name",
              "example": "Ivan"
            },
            "city": {
              "type": "string",
              "description": "City of residence of the user",
              "example": "Kyiv"
            },
            "phone": {
              "type": "string",
              "description": "User's phone",
              "example": "+380123456789"
            }
          }
        },
        "example": {
          "user": {
            "email": "ivan@gmail.com",
            "_id": "1",
            "userName": "Ivan",
            "city": "Kyiv",
            "phone": "+380123456789"
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNjc0OTMxMTc4fQ.I9kaulBObpq4MOHq4raD3iTwanceICRkB5S9Zs2XOvM"
          },
          "longToken": {
            "type": "string",
            "description": "User's longToken",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNjc0OTMxMTc4fQ.I9kaulBObpq4MOHq4raD3iTwanceICRkB5S9Zs2XOvM"
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNjc0OTk3OTMyfQ.M6JRm96MLgXda_EvORAd3KDOVOnXNSQkE1v-c-2jano",
          "longToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNjc0OTk3OTMyfQ.M6JRm96MLgXda_EvORAd3KDOVOnXNSQkE1v-c-2jano"
        }
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "User's id"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "User's id"
          },
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": "Ivan"
          },
          "message": {
            "type": "string",
            "description": "Status operation message",
            "example": "Logout success"
          }
        },
        "example": {
          "_id": "1",
          "userName": "Ivan",
          "message": "Logout success"
        }
      },
      "GetPetsUserResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "integer",
              "description": "User's id"
            },
            "imgURL": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Url img pet",
                  "example": "pet.jpg"
                },
                "publicId": {
                  "type": "integer",
                  "description": "Public id",
                  "example": 1
                }
              }
            },
            "name": {
              "type": "string",
              "description": "Sharik"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Birthday"
            },
            "breed": {
              "type": "string",
              "description": "Breed"
            },
            "comment": {
              "type": "string",
              "description": "Comment about the pets"
            }
          }
        },
        "example": [
          {
            "_id": 1,
            "imgURL": {
              "url": "https://zoo-club.com.ua/image/cache/catalog/blog/news003-910x605.jpg",
              "publicId": "1"
            },
            "name": "Lucky",
            "dateOfBirth": "2020-02-09T22:00:00.000Z",
            "breed": "Setter",
            "comment": "Lorem ipsum dolor sit amet"
          }
        ]
      },
      "AddUserPetsRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Leopold"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "02.10.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pet breed",
            "example": "Setter"
          },
          "comment": {
            "type": "string",
            "description": "Comment about the pets",
            "example": "Lorem ipsum dolor sit amet"
          }
        }
      },
      "AddUserPetsResponse": {
        "type": "object",
        "properties": {
          "pet": {
            "_id": {
              "type": "integer",
              "description": "Pet's id"
            },
            "imgURL": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Url img pet",
                  "example": "pet.jpg"
                },
                "publicId": {
                  "type": "integer",
                  "description": "Public id",
                  "example": 1
                }
              }
            },
            "name": {
              "type": "string",
              "description": "Pet name"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Pet's birthday"
            },
            "breed": {
              "type": "string",
              "description": "Pet's breed"
            },
            "comment": {
              "type": "string",
              "description": "Comment about the pets"
            },
            "userId": {
              "type": "integer",
              "description": "User's id"
            }
          }
        },
        "example": {
          "pet": {
            "_id": "1",
            "imgURL": {
              "url": "https://zoo-club.com.ua/image/cache/catalog/blog/news003-910x605.jpg",
              "publicId": "1"
            },
            "name": "Jack",
            "dateOfBirth": "22.04.2018",
            "breed": "JKKKKKK",
            "comment": "Lorem ipsum dolor sit amet"
          }
        }
      },
      "DeletePetsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "message about deleted",
            "example": "Pet 'Jack' has been deleted"
          },
          "pet": {
            "_id": {
              "type": "integer",
              "description": "id pet",
              "example": 1
            },
            "imgURL": {
              "url": {
                "type": "string",
                "description": "url image",
                "example": "https://zoo-club.com.ua/image/cache/catalog/blog/news003-910x605.jpg"
              },
              "publicId": {
                "type": "integer",
                "description": "id",
                "example": 1
              }
            },
            "name": {
              "type": "string",
              "description": "name pet",
              "example": "Jack"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Pet's birthday"
            },
            "breed": {
              "type": "string",
              "description": "Pet's breed"
            },
            "comment": {
              "type": "string",
              "description": "Comment about the pets"
            },
            "userId": {
              "type": "integer",
              "description": "User's id"
            }
          }
        },
        "example": {
          "message": "Pet 'Jack' has been deleted",
          "pet": {
            "_id": "1",
            "imgURL": {
              "url": "https://zoo-club.com.ua/image/cache/catalog/blog/news003-910x605.jpg",
              "publicId": 1
            },
            "name": "Jack",
            "dateOfBirth": "22.04.2018",
            "breed": "JKKKKKK",
            "comment": "Lorem ipsum dolor sit amet"
          }
        }
      },
      "AllNoticesResponse": {
        "type": "object",
        "properties": {
          "notices": {
            "properties": {
              "type": "array",
              "items": {
                "_id": {
                  "type": "integer",
                  "description": "Notices id",
                  "example": 1
                },
                "categoryId": {
                  "type": "integer",
                  "description": "Notices category id",
                  "example": 1
                },
                "imgURL": {
                  "url": {
                    "type": "string",
                    "description": "url image",
                    "example": "https://zoo-club.com.ua/image/cache/catalog/blog/news003-910x605.jpg"
                  },
                  "publicId": {
                    "type": "integer",
                    "description": "public id",
                    "example": 1
                  }
                },
                "title": {
                  "type": "string",
                  "description": "Head notices",
                  "example": "in good hands"
                },
                "petname": {
                  "type": "string",
                  "description": "name pet",
                  "example": "Jack"
                },
                "dateofbirth": {
                  "type": "string",
                  "description": "Pet's birthday",
                  "example": "20.02.2020"
                },
                "breed": {
                  "type": "string",
                  "description": "Pet's breed",
                  "example": "husky"
                },
                "sex": {
                  "type": "string",
                  "description": "Sex of the pet",
                  "example": "female"
                },
                "location": {
                  "type": "string",
                  "description": "Location",
                  "example": "Kyiv"
                },
                "price": {
                  "type": "string",
                  "description": "Price of the pet",
                  "example": "1000"
                },
                "comments": {
                  "type": "string",
                  "description": "Comment about the pets",
                  "example": "Friendly, calm and kind"
                }
              }
            }
          },
          "totalRecords": {
            "type": "integer",
            "description": "total pages",
            "example": 1
          }
        },
        "example": {
          "notices": [
            {
              "_id": 1,
              "categoryId": 1,
              "imgURL": {
                "url": "https://zoo-club.com.ua/image/cache/catalog/blog/news003-910x605.jpg",
                "publicId": 1
              },
              "title": "Сute dog looking for a home",
              "petname": "Jack",
              "breed": "husky",
              "sex": "female",
              "location": "Kyiv",
              "price": "1000",
              "comments": "Friendly, calm and kind",
              "dateofbirth": "20.02.2021"
            }
          ],
          "totalRecords": 1
        }
      },
      "GetONEResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "Notices id",
            "example": 1
          },
          "categoryId": {
            "type": "integer",
            "description": "Notices category id",
            "example": 1
          },
          "imgURL": {
            "url": {
              "type": "string",
              "description": "url image",
              "example": "https://zoo-club.com.ua/image/cache/catalog/blog/news003-910x605.jpg"
            },
            "publicId": {
              "type": "integer",
              "description": "public id",
              "example": 1
            }
          },
          "title": {
            "type": "string",
            "description": "Head notices",
            "example": "in good hands"
          },
          "petname": {
            "type": "string",
            "description": "name pet",
            "example": "Jack"
          },
          "dateofbirth": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "20.02.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "husky"
          },
          "sex": {
            "type": "string",
            "description": "Sex of the pet",
            "example": "female"
          },
          "location": {
            "type": "string",
            "description": "Location",
            "example": "Kyiv"
          },
          "price": {
            "type": "string",
            "description": "Price of the pet",
            "example": "1000"
          },
          "comments": {
            "type": "string",
            "description": "Comment about the pets",
            "example": "Friendly, calm and kind"
          }
        },
        "example": {
          "_id": 1,
          "categoryId": 1,
          "imgURL": {
            "url": "https://zoo-club.com.ua/image/cache/catalog/blog/news003-910x605.jpg",
            "publicId": 1
          },
          "title": "Сute dog looking for a home",
          "petname": "Jack",
          "breed": "husky",
          "sex": "female",
          "location": "Kyiv",
          "price": "1000",
          "comments": "Friendly, calm and kind",
          "dateofbirth": "20.02.2021"
        }
      },
      "FavoriteNotivesAddRequest": {
        "type": "object",
        "required": ["_id"],
        "properties": {
          "_id": {
            "type": "integer",
            "description": "Notices add to favorite id",
            "example": 1
          },
          "favoriteAds": {
            "type": "integer",
            "description": "favorite id",
            "example": 1
          }
        }
      },
      "FavoriteNotivesAddResponse": {
        "type": "object",
        "properties": {
          "favoriteAds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Notices add to favorite, yes or no ?",
            "example": "Notices add to favorite"
          },
          "message": {
            "type": "string",
            "description": "Notices add to favorite, yes or no ?",
            "example": "Notices add to favorite"
          }
        },
        "example": {
          "favoriteAds": [1231231312, 4342342343, 4235252355],
          "message": "Notices add to favorite"
        }
      },
      "DeleteFavoriteNotivesResponse": {
        "type": "object",
        "properties": {
          "favoriteAds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Notices delete from favorite, yes or no ?",
            "example": "Notices delete from favorite"
          },
          "message": {
            "type": "string",
            "description": "Notices delete from favorite, yes or no ?",
            "example": "Notices delete from favorite"
          }
        },
        "example": {
          "favoriteAds": [1231231312, 4342342343, 4235252355],
          "message": "Notices delete from favorite"
        }
      },
      "ServicesResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "Service id",
            "example": "1"
          },
          "logo": {
            "type": "buffer",
            "description": "Service image",
            "example": "https://lkplev.com/images/logo.png"
          },
          "name": {
            "type": "string",
            "description": "Service name",
            "example": "PetHelp"
          },
          "friendUrl": {
            "type": "string",
            "description": "Url service",
            "example": "https://lkplev.com/"
          },
          "workingHours": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "day": {
                  "type": "boolean",
                  "description": "Working days",
                  "example": "SU"
                },
                "from": {
                  "type": "string",
                  "description": "open",
                  "example": "9:00"
                },
                "to": {
                  "type": "string",
                  "description": "close",
                  "example": "20:00"
                }
              }
            }
          },
          "adress": {
            "type": "string",
            "description": "Service address",
            "example": "Grigorenka Street, 25"
          },
          "adressUrl": {
            "type": "string",
            "description": "Url service address",
            "example": "https://goo.gl/maps/3uAThDrKBGLNRBpm6"
          },
          "email": {
            "type": "string",
            "description": "Service email",
            "example": "barbos@gmail.com"
          },
          "phone": {
            "type": "string",
            "description": "Service phone",
            "example": "0664880480"
          }
        },
        "example": {
          "_id": "1",
          "logo": "https://lkplev.com/images/logo.png",
          "name": "PetHelp",
          "friendUrl": "https://lkplev.com/",
          "workingHours": [
            {
              "day": "SU",
              "from": "9:00",
              "to": "20:00"
            }
          ],
          "adress": "Grigorenka Street, 25",
          "adressUrl": "https://goo.gl/maps/3uAThDrKBGLNRBpm6",
          "email": "barbos@gmail.com",
          "phone": "0664880480"
        }
      },
      "NewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "integer",
              "description": "News id",
              "example": "1"
            },
            "title": {
              "type": "string",
              "description": "News header title",
              "example": "Telegram has launched a chatbot"
            },
            "text": {
              "type": "string",
              "description": "News text",
              "example": "A special Telegram bot 'Your Vet Kyiv' was launched in the capital"
            },
            "imgURL": {
              "type": "string",
              "description": "Url news",
              "example": "https://phc.org.ua/news"
            },
            "date": {
              "type": "date",
              "description": "Publication of news",
              "example": "20/02/2021"
            }
          },
          "example": {
            "_id": "1",
            "title": "Telegram has launched a chatbot",
            "text": "A special Telegram bot 'Your Vet Kyiv' was launched in the capital",
            "imgURL": "https://phc.org.ua/news",
            "date": "20/02/2021"
          }
        }
      },
      "NoticeAddRequest": {
        "type": "object",
        "required": ["userId", "title", "sex", "location"],
        "properties": {
          "categoryId": {
            "type": "integer",
            "description": "Category id",
            "example": "1"
          },
          "userId": {
            "type": "integer",
            "description": "User's id",
            "example": 1
          },
          "imgURL": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "Url img pet",
                "example": "pet.jpg"
              },
              "publicId": {
                "type": "integer",
                "description": "Public id",
                "example": 1
              }
            }
          },
          "title": {
            "type": "string",
            "description": "Pets breed",
            "example": "Сute dog looking for a home"
          },
          "petname": {
            "type": "string",
            "description": "Pets breed",
            "example": "Jack"
          },
          "dateofbirth": {
            "type": "string",
            "description": "Pets breed",
            "example": "one year"
          },
          "breed": {
            "type": "string",
            "description": "Pets breed",
            "example": "Pomeranian"
          },
          "sex": {
            "type": "string",
            "description": "Sex list: [male, female]",
            "example": "female"
          },
          "location": {
            "type": "string",
            "description": "Pet location",
            "example": "Kyiv"
          },
          "price": {
            "type": "integer",
            "description": "Price",
            "example": 5000
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Very kind, obedient and pure"
          }
        }
      },
      "NoticeAddResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "id",
            "example": 1
          },
          "categoryId": {
            "type": "integer",
            "description": "Category id",
            "example": "1"
          },
          "imgURL": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "Url img pet",
                "example": "pet.jpg"
              },
              "publicId": {
                "type": "integer",
                "description": "Public id",
                "example": 1
              }
            }
          },
          "userId": {
            "type": "integer",
            "description": "User's id",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Pets breed",
            "example": "Сute dog looking for a home"
          },
          "petname": {
            "type": "string",
            "description": "Pets breed",
            "example": "Jack"
          },
          "dateofbirth": {
            "type": "string",
            "description": "Pets breed",
            "example": "one year"
          },
          "breed": {
            "type": "string",
            "description": "Pets breed",
            "example": "Pomeranian"
          },
          "sex": {
            "type": "string",
            "description": "Sex list: [male, female]",
            "example": "female"
          },
          "location": {
            "type": "string",
            "description": "Pet location",
            "example": "Kyiv"
          },
          "price": {
            "type": "integer",
            "description": "Price",
            "example": 5000
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Very kind, obedient and pure"
          }
        },
        "example": {
          "_id": "1",
          "categoryId": "1",
          "imgURL": {
            "url": "https://dogcat.com.ua/",
            "publicId": "1"
          },
          "title": "Сute dog looking for a home",
          "petname": "Jack",
          "dateofbirth": "one year",
          "breed": "Pomeranian",
          "sex": "female",
          "location": "Kyiv,Ukraine",
          "price": "5000",
          "comments": "Very kind, obedient and pure"
        }
      },
      "GetNoticesAuthUserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "description": "id",
            "example": 1
          },
          "categoryId": {
            "type": "integer",
            "description": "Category id",
            "example": "1"
          },
          "imgURL": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "Url img pet",
                "example": "pet.jpg"
              },
              "publicId": {
                "type": "integer",
                "description": "Public id",
                "example": 1
              }
            }
          },
          "userId": {
            "type": "integer",
            "description": "User's id",
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "Pets breed",
            "example": "Сute dog looking for a home"
          },
          "petname": {
            "type": "string",
            "description": "Pets breed",
            "example": "Jack"
          },
          "dateofbirth": {
            "type": "string",
            "description": "Pets breed",
            "example": "one year"
          },
          "breed": {
            "type": "string",
            "description": "Pets breed",
            "example": "Pomeranian"
          },
          "sex": {
            "type": "string",
            "description": "Sex list: [male, female]",
            "example": "female"
          },
          "location": {
            "type": "string",
            "description": "Pet location",
            "example": "Kyiv"
          },
          "price": {
            "type": "integer",
            "description": "Price",
            "example": 5000
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Very kind, obedient and pure"
          }
        },
        "example": {
          "_id": "1",
          "categoryId": "1",
          "imgURL": {
            "url": "https://dogcat.com.ua/",
            "publicId": "1"
          },
          "title": "Сute dog looking for a home",
          "petname": "Jack",
          "dateofbirth": "one year",
          "breed": "Pomeranian",
          "sex": "female",
          "location": "Kyiv,Ukraine",
          "price": "5000",
          "comments": "Very kind, obedient and pure"
        }
      },
      "RemoveNoticeResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Delete success",
            "example": "Notice delete success"
          },
          "_id": {
            "type": "integer",
            "description": "id",
            "example": "1"
          },
          "userId": {
            "type": "integer",
            "description": "User's id",
            "example": "1"
          }
        },
        "example": {
          "message": "Notice delete success",
          "id": "1",
          "userId": "1"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
